{
  "name": "cultural-archiver",
  "version": "1.0.0",
  "description": "A comprehensive digital archiving system for cultural events and artifacts",
  "private": true,
  "workspaces": [
    "src/frontend",
    "src/workers"
  ],
  "type": "module",
  "engines": {
    "node": ">=22.0.0"
  },
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:workers\"",
    "dev:frontend": "cd src/frontend && npm run dev",
    "dev:workers": "cd src/workers && npm run dev",
    "build": "npm run build:frontend && npm run build:workers",
    "build:frontend": "cd src/frontend && npm run build",
    "build:workers": "cd src/workers && npm run build",
    "deploy": "npm run test && npm run deploy:frontend && npm run deploy:workers",
    "deploy:frontend": "cd src/frontend && npm run deploy",
    "deploy:workers": "cd src/workers && npm run deploy",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "npm run type-check:frontend && npm run type-check:workers && npm run type-check:shared",
    "type-check:frontend": "cd src/frontend && npm run type-check",
    "type-check:workers": "cd src/workers && npm run type-check",
    "type-check:shared": "tsc --noEmit --project src/shared/tsconfig.json",
    "extract-schema": "npx tsx migrations/tools/extract-schema.ts",
    "extract-schema:test": "npx tsx migrations/tools/extract-schema.ts --test",
    "recreate-db": "npx tsx migrations/tools/recreate-database.ts",
    "recreate-db:no-data": "npx tsx migrations/tools/recreate-database.ts --no-data",
    "test:migrations": "npx vitest migrations/tools --run",
    "migrate:create": "npx tsx scripts/migration-scaffold.ts",
    "migrate:dev": "cd src/workers && npx wrangler d1 migrations apply cultural-archiver --env development",
    "migrate:prod": "cd src/workers && npx wrangler d1 migrations apply cultural-archiver --env production",
    "migrate:status": "cd src/workers && npx wrangler d1 migrations list cultural-archiver --env development",
    "migrate:status:prod": "cd src/workers && npx wrangler d1 migrations list cultural-archiver --env production",
    "migrate:rollback": "cd src/workers && npx wrangler d1 migrations rollback cultural-archiver --env development",
    "migrate:rollback:prod": "cd src/workers && npx wrangler d1 migrations rollback cultural-archiver --env production",
    "migrate:validate": "npx tsx scripts/validate-migration.ts",
    "log": "npx wrangler tail cultural-archiver-api --format pretty",
    "test": "npm run test:frontend && npm run test:workers",
    "test:frontend": "cd src/frontend && npm run test",
    "test:workers": "cd src/workers && npm run test",
    "test:watch": "concurrently \"npm run test:frontend:watch\" \"npm run test:workers:watch\"",
    "test:frontend:watch": "cd src/frontend && npm run test:watch",
    "test:workers:watch": "cd src/workers && npm run test:watch",
    "test:coverage": "npm run test:frontend:coverage && npm run test:workers:coverage",
    "test:frontend:coverage": "cd src/frontend && npm run test --coverage",
    "test:workers:coverage": "cd src/workers && npm run test:coverage",
    "quality": "npm run lint && npm run type-check && npm run test",
    "setup": "npm install && npm run build",
    "backup": "npx tsx scripts/backup.ts",
    "backup:remote": "npx tsx scripts/backup.ts --remote",
    "backup:photos": "npx tsx scripts/backup.ts --photos-only",
    "test:backup": "npx tsx scripts/test-backup.ts"
  },
  "devDependencies": {
    "@types/archiver": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "@vue/eslint-config-typescript": "^13.0.0",
    "archiver": "^7.0.1",
    "concurrently": "^9.0.0",
    "cross-env": "^10.0.0",
    "eslint": "^8.57.0",
    "eslint-plugin-vue": "^9.0.0",
    "prettier": "^3.0.0",
    "tsx": "^4.20.5",
    "typescript": "^5.6.0",
    "vue-eslint-parser": "^10.2.0",
    "wrangler": "^4.33.2"
  },
  "keywords": [
    "cultural-archiver",
    "digital-archiving",
    "cloudflare",
    "vue",
    "typescript",
    "workers"
  ],
  "author": "Steven Smethurst",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/funvill/cultural-archiver.git"
  },
  "bugs": {
    "url": "https://github.com/funvill/cultural-archiver/issues"
  },
  "homepage": "https://github.com/funvill/cultural-archiver#readme",
  "dependencies": {
    "dotenv": "^17.2.2",
    "sqlite3": "^5.1.7"
  }
}
