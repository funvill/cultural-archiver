/* Import Leaflet CSS first */
@import 'leaflet/dist/leaflet.css';

/* Leaflet map z-index fixes */
.leaflet-container {
  z-index: 1 !important;
}

.leaflet-tile-pane {
  z-index: 1 !important;
}

.leaflet-control-container {
  z-index: 1000 !important;
}

/* Ensure map tiles are visible */
.leaflet-tile {
  opacity: 1 !important;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base styles */
@layer base {
  html {
    font-family:
      'Inter',
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      sans-serif;
  }

  body {
    @apply bg-gray-50 text-gray-900;
  }
}

/* Component styles */
@layer components {
  .btn {
    @apply px-4 py-2 rounded-md font-medium transition-colors duration-200;
  }

  .btn-primary {
    @apply bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2;
  }

  .btn-secondary {
    @apply bg-gray-200 text-gray-900 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2;
  }

  .card {
    @apply bg-white rounded-lg shadow-md overflow-hidden;
  }

  .input {
    @apply w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;
  }

  .label {
    @apply block text-sm font-medium text-gray-900 mb-1;
  }

  /* Enhanced contrast for secondary text */
  .text-secondary {
    @apply text-gray-700;
  }

  .text-muted {
    @apply text-gray-600;
  }

  /* Status badge improvements */
  .status-approved {
    @apply bg-green-100 text-green-800 border border-green-200;
  }

  .status-pending {
    @apply bg-yellow-100 text-yellow-900 border border-yellow-200;
  }

  .status-rejected {
    @apply bg-red-100 text-red-800 border border-red-200;
  }

  /* Warning/error message improvements */
  .alert-warning {
    @apply bg-yellow-50 border border-yellow-300 text-yellow-900;
  }

  .alert-error {
    @apply bg-red-50 border border-red-300 text-red-900;
  }

  .alert-info {
    @apply bg-blue-50 border border-blue-300 text-blue-900;
  }
}

/* Utility classes */
@layer utilities {
  .gradient-text {
    @apply bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent;
  }

  .glass {
    @apply bg-white/10 backdrop-blur-md border border-white/20;
  }

  /* Material-like CSS variables and global FAB styles */
  :root {
    /* Themeable Material CSS variables. These are populated at runtime by `applyTheme()`
       in `src/theme/theme.ts`. They also include sensible fallbacks for build-time CSS.
    */
    --md-primary: #1e88e5; /* fallback blue 600 */
    --md-primary-variant: #1565c0;
    --md-secondary: #8e24aa;
    --md-secondary-variant: #6a1b9a;
    --md-background: #f8fafc;
    --md-surface: #ffffff;
    --md-error: #b00020;
    --md-on-primary: #ffffff;
    --md-on-secondary: #ffffff;
    --md-on-background: #111827;
    --md-on-surface: #111827;
    --md-on-error: #ffffff;

    --appbar-height: 64px;
    /* Compute FAB so 30% of it overlaps below the 64px header when top:0 */
    --fab-size: 92px;
  }

  /* Floating Action Button base styles (global fallback for non-tailwind contexts) */
  .fab {
    width: var(--fab-size);
    height: var(--fab-size);
    border-radius: 9999px;
    background-color: var(--md-primary, #1e88e5);
    color: var(--md-on-primary, #ffffff);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-shadow:
      0 6px 10px rgba(16, 24, 40, 0.12),
      0 1px 4px rgba(16, 24, 40, 0.08);
    transition:
      box-shadow 160ms ease,
      transform 120ms ease;
    border: none;
    cursor: pointer;
  }

/* Theme semantic utility classes -------------------------------------------------- */
/* These map to the runtime theme CSS variables defined by `theme.ts`.
   Use these in templates instead of hard-coded Tailwind color utilities. */
.theme-background { background-color: rgb(var(--md-background)); }
.theme-on-background { color: rgb(var(--md-on-background)); }
.theme-surface { background-color: rgb(var(--md-surface)); }
.theme-on-surface { color: rgb(var(--md-on-surface)); }
.theme-primary { background-color: rgb(var(--md-primary)); color: rgb(var(--md-on-primary)); }
.theme-on-primary { color: rgb(var(--md-on-primary)); }
.theme-secondary { background-color: rgb(var(--md-secondary)); color: rgb(var(--md-on-secondary)); }
.theme-on-secondary { color: rgb(var(--md-on-secondary)); }
.theme-error { background-color: rgb(var(--md-error)); color: rgb(var(--md-on-error)); }
.theme-on-error { color: rgb(var(--md-on-error)); }

/* Success / Warning semantic utilities */
.theme-success { background-color: rgb(var(--md-success)); color: rgb(var(--md-on-success)); }
.theme-on-success { color: rgb(var(--md-on-success)); }
.theme-warning { background-color: rgb(var(--md-warning)); color: rgb(var(--md-on-warning)); }
.theme-on-warning { color: rgb(var(--md-on-warning)); }

/* Small helpers for borders or muted text that use on-surface with opacity */
.theme-muted { color: rgba(var(--md-on-surface), 0.7); }
.theme-border { border-color: rgba(var(--md-on-surface), 0.12); }

/* Compatibility mappings for common Tailwind color utility classes
  These let existing templates that still use Tailwind color utilities pick up
  the active runtime theme until we finish replacing all instances. */
.text-gray-900 { color: rgb(var(--md-on-background)) !important; }
.text-gray-800 { color: rgb(var(--md-on-surface)) !important; }
.text-gray-700 { color: rgba(var(--md-on-surface), 0.85) !important; }
.text-gray-600 { color: rgba(var(--md-on-surface), 0.7) !important; }
.text-gray-500 { color: rgba(var(--md-on-surface), 0.6) !important; }
.text-gray-400 { color: rgba(var(--md-on-surface), 0.5) !important; }

.bg-white { background-color: rgb(var(--md-surface)) !important; }
.bg-gray-50 { background-color: rgb(var(--md-background)) !important; }
.bg-gray-100 { background-color: rgba(var(--md-on-surface), 0.04) !important; }

/* Accent colors - map common tailwind utility names to theme variables where it makes sense.
  We keep the original hue variants for granular cases; these mappings are opinionated. */
.text-blue-600 { color: rgb(var(--md-primary)) !important; }
.bg-blue-600 { background-color: rgb(var(--md-primary)) !important; }
.text-green-600 { color: rgb(var(--md-success)) !important; }
.bg-green-600 { background-color: rgb(var(--md-success)) !important; }
.text-yellow-600 { color: rgb(var(--md-warning)) !important; }
.bg-yellow-600 { background-color: rgb(var(--md-warning)) !important; }
.text-red-600 { color: rgb(var(--md-error)) !important; }
.bg-red-600 { background-color: rgb(var(--md-error)) !important; }

/* Status badges fallback - a few commonly used utility combos */
.bg-green-100 { background-color: rgba(var(--md-secondary), 0.12) !important; }
.text-green-800 { color: rgba(var(--md-secondary), 0.95) !important; }
.bg-yellow-100 { background-color: rgba(var(--md-error), 0.12) !important; }
.text-yellow-800 { color: rgba(var(--md-error), 0.95) !important; }
.bg-red-100 { background-color: rgba(var(--md-error), 0.12) !important; }
.text-red-800 { color: rgba(var(--md-error), 0.95) !important; }

/* Map status badge fallbacks to semantic success/warning/error vars where appropriate */
.bg-green-100 { background-color: rgba(var(--md-success), 0.12) !important; }
.text-green-800 { color: rgba(var(--md-success), 0.95) !important; }
.bg-yellow-100 { background-color: rgba(var(--md-warning), 0.12) !important; }
.text-yellow-800 { color: rgba(var(--md-warning), 0.95) !important; }
.bg-red-100 { background-color: rgba(var(--md-error), 0.12) !important; }
.text-red-800 { color: rgba(var(--md-error), 0.95) !important; }

  .fab:hover,
  .fab:focus {
    box-shadow:
      0 14px 30px rgba(16, 24, 40, 0.22),
      0 6px 12px rgba(16, 24, 40, 0.14);
    transform: translateX(-50%) translateY(-4px) scale(1.03);
    outline: none;
  }

  .fab:active {
    transform: translateX(-50%) translateY(0) scale(0.99);
    box-shadow:
      0 4px 8px rgba(16, 24, 40, 0.12),
      0 1px 4px rgba(16, 24, 40, 0.08);
  }

  /* Visible focus ring for keyboard users */
  .fab:focus-visible {
    box-shadow:
      0 14px 30px rgba(16, 24, 40, 0.22),
      0 6px 12px rgba(16, 24, 40, 0.14),
      0 0 0 4px rgba(30, 136, 229, 0.18);
    transform: translateX(-50%) translateY(-4px) scale(1.03);
  }
}
