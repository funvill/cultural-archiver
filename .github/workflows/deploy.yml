name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Configure production database
        env:
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
        run: |
          # Replace placeholder database ID with actual production database ID
          if [ -z "${{ secrets.D1_DATABASE_ID }}" ]; then
            echo "❌ Error: D1_DATABASE_ID secret is not set"
            exit 1
          fi
          
          sed -i 's/CHANGE_ME_PRODUCTION_DATABASE_ID/${{ secrets.D1_DATABASE_ID }}/g' src/workers/wrangler.toml
          
          # Verify the replacement worked
          if grep -q "CHANGE_ME_PRODUCTION_DATABASE_ID" src/workers/wrangler.toml; then
            echo "❌ Error: Database ID placeholder was not replaced"
            exit 1
          fi
          
          echo "✅ Production database configuration updated with database ID: ${{ secrets.D1_DATABASE_ID }}"

      - name: Run database migrations
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
          D1_DATABASE_NAME: ${{ secrets.D1_DATABASE_NAME }}
        run: |
          # Install wrangler globally for migrations
          npm install -g wrangler

          # Run production migrations with safety checks (--yes for CI)
          npm run migrate:prod -- --yes

      - name: Run unified deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npm run deploy

      - name: Add deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Components**: Frontend + Workers + Migrations" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
