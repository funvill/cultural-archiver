name: Deploy Staging

# Deploys to test.publicartregistry.com on every push to non-main branches
on:
  push:
    branches-ignore:
      - main

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://test.publicartregistry.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Bundle social media templates
        run: npx tsx scripts/bundle-templates.ts

      - name: Run tests
        run: npm run test
        
      - name: Build frontend
        run: npm run build:frontend
        
      - name: Build workers
        run: npm run build:workers
        
      - name: Deploy frontend to staging
        run: |
          cd src/frontend
          npx wrangler deploy --env staging
        env:
          CI: true
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      - name: Deploy workers to staging
        run: |
          cd src/workers
          npx wrangler deploy --env staging
        env:
          CI: true
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Comment deployment URL
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: 'ðŸš€ Deployed to staging: https://test.publicartregistry.com'
            })
